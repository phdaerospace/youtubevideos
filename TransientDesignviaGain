// By Dr. Karthikeyan K
// Free to use :- Chaaiware
// Transient response via gain as given in Pg 419 of Norman S Nise Book on Control systems

close(winsid())//Scilab equivalent for Matlab close('all')
clear //kills variables
s = %s // define s as a polyniomial variable
OL = syslin('c',(0.25*(s+0.435)/((s+1.23)*(s+2)*(s^2+0.226*s+0.0169))))// Scilabs way of defining a TF
// if 'c' not defined it will assume it as discrete and will display the TF in Z- domain
CL = OL/(1+OL)// Find the CLosed loop trasfer function without any gain
t = 0:0.1:40 // time for which step has to be simulated
y_CL = csim('step', t, CL)// Scilabs way of finding the step response of a TF
figure;plot2d(t,y_CL) // plot
PO = 20; // percentage overshoot (PO) required
zeta = -log(PO/100)/(sqrt((%pi)^2 +(log(PO/100))^2)) // Formula to find damping constant from PO
angle = acos(zeta) // Angle of the line corresponding to the zeta 

figure
evans(OL,100); // Root locus plot
sgrid() // To mark the grid lines to help analyse rootlocus
// Post-tuning graphical elements to enhance the Rootlocus plot visibility 
//(code from scilab example)
sGrid = gca().children.children.children;
i = find(sGrid(3:$).type=="Polyline" & sGrid(1:$-2).type=="Polyline",1);
Rays = sGrid(i:$);
Rays(Rays.type=="Text").font_foreground = color("red");
Rays_lines = Rays(Rays.type=="Polyline");
set(Rays_lines, "line_style", 9, "thickness", 2.5);
//
ch = gca().children;
curves = ch(2).children;
curves.thickness = 2;
asymptotes = ch(ch.type=="Segs");
asymptotes.segs_color = color("grey70");

// Completing Evans plot:
[Ki,s] = kpure(OL) // Gains that give pure imaginary closed loop poles
plot([real(s) real(s)],[imag(s) -imag(s)],'*r')

[Kr,s] = krac2(OL)
//*/
set(gca(),"auto_clear","off")// To hold on to the previous figure/ to draw over the prev fig
// To plot the line corresponding to the zeta
for i=0:1:5
y(i+1) = i*sin(angle);
x(i+1) = -i*cos(angle);
end
plot(x,y,'thickness',2)
/* From the above plot we can find that the root locus cuts the 20% overshoot at 
-0.2+0.3i with a loop gain of 2.848
*/
K = 2.848;
s = %s;
OL_new = syslin('c',(0.25*K*(s+0.435)/((s+1.23)*(s+2)*(s^2+0.226*s+0.0169))))// Open loop TF with the new gaion which will satisfy the required transient repsonse
CL_new = OL_new/(1+OL_new)// new closed loop TF
y_new = csim('step', t, CL_new) // Simulate the step response of the TF with the new gain
figure;plot2d(t,y_new)
